diff --git a/node_modules/codemirror/addon/hint/javascript-hint.js b/node_modules/codemirror/addon/hint/javascript-hint.js
index 9563979..9668e63 100644
--- a/node_modules/codemirror/addon/hint/javascript-hint.js
+++ b/node_modules/codemirror/addon/hint/javascript-hint.js
@@ -1,5 +1,5 @@
 // CodeMirror, copyright (c) by Marijn Haverbeke and others
-// Distributed under an MIT license: https://codemirror.net/5/LICENSE
+// Distributed under an MIT license: https://codemirror.net/LICENSE
 
 (function(mod) {
   if (typeof exports == "object" && typeof module == "object") // CommonJS
@@ -28,7 +28,7 @@
     return arr.indexOf(item) != -1;
   }
 
-  function scriptHint(editor, keywords, getToken, options) {
+  function scriptHint(editor, keywords, ukeys, getToken, options) {
     // Find the token at the cursor
     var cur = editor.getCursor(), token = getToken(editor, cur);
     if (/\b(?:string|comment)\b/.test(token.type)) return;
@@ -39,7 +39,7 @@
     // If it's not a 'word-style' token, ignore the token.
     if (!/^[\w$_]*$/.test(token.string)) {
       token = {start: cur.ch, end: cur.ch, string: "", state: token.state,
-               type: token.string == "." ? "property" : null};
+        type: token.string == "." ? "property" : null};
     } else if (token.end > cur.ch) {
       token.end = cur.ch;
       token.string = token.string.slice(0, cur.ch - token.start);
@@ -54,22 +54,33 @@
       if (!context) var context = [];
       context.push(tprop);
     }
-    return {list: getCompletions(token, context, keywords, options),
-            from: Pos(cur.line, token.start),
-            to: Pos(cur.line, token.end)};
+    return {list: getCompletions(token, context, keywords, ukeys, options),
+      from: Pos(cur.line, token.start),
+      to: Pos(cur.line, token.end)};
   }
 
+  /**
+   * 主调函数，加入了我自己定义的一个CodeMirror.ukeys变量，用来向CodeMirror传递用户
+   * 输入的所有的单词
+   * @param editor
+   * @param options
+   * @returns {{list, from, to}|*}
+   */
   function javascriptHint(editor, options) {
-    return scriptHint(editor, javascriptKeywords,
-                      function (e, cur) {return e.getTokenAt(cur);},
-                      options);
+    //获取用户当前的编辑器中的编写的代码
+    let words = editor.getValue() + "";
+    //利用正则取出用户输入的所有的英文的字母
+    words = words.replace(/[a-z]+[\-|\']+[a-z]+/ig, '').match(/([a-z]+)/ig);
+    return scriptHint(editor, javascriptKeywords,words,
+        function (e, cur) {return e.getTokenAt(cur);},
+        options);
   };
   CodeMirror.registerHelper("hint", "javascript", javascriptHint);
 
   function getCoffeeScriptToken(editor, cur) {
-  // This getToken, it is for coffeescript, imitates the behavior of
-  // getTokenAt method in javascript.js, that is, returning "property"
-  // type and treat "." as independent token.
+    // This getToken, it is for coffeescript, imitates the behavior of
+    // getTokenAt method in javascript.js, that is, returning "property"
+    // type and treat "." as indepenent token.
     var token = editor.getTokenAt(cur);
     if (cur.ch == token.start + 1 && token.string.charAt(0) == '.') {
       token.end = token.start;
@@ -90,14 +101,14 @@
   CodeMirror.registerHelper("hint", "coffeescript", coffeescriptHint);
 
   var stringProps = ("charAt charCodeAt indexOf lastIndexOf substring substr slice trim trimLeft trimRight " +
-                     "toUpperCase toLowerCase split concat match replace search").split(" ");
+      "toUpperCase toLowerCase split concat match replace search").split(" ");
   var arrayProps = ("length concat join splice push pop shift unshift slice reverse sort indexOf " +
-                    "lastIndexOf every some filter forEach map reduce reduceRight ").split(" ");
+      "lastIndexOf every some filter forEach map reduce reduceRight ").split(" ");
   var funcProps = "prototype apply call bind".split(" ");
   var javascriptKeywords = ("break case catch class const continue debugger default delete do else export extends false finally for function " +
-                  "if in import instanceof new null return super switch this throw true try typeof var void while with yield").split(" ");
+      "if in import instanceof new null return super switch this throw true try typeof var void while with yield").split(" ");
   var coffeescriptKeywords = ("and break catch class continue delete do else extends false finally for " +
-                  "if in instanceof isnt new no not null of off on or return switch then throw true try typeof until void while with yes").split(" ");
+      "if in instanceof isnt new no not null of off on or return switch then throw true try typeof until void while with yes").split(" ");
 
   function forAllProps(obj, callback) {
     if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
@@ -108,7 +119,7 @@
     }
   }
 
-  function getCompletions(token, context, keywords, options) {
+  function getCompletions(token, context, keywords, ukeys, options) {
     var found = [], start = token.string, global = options && options.globalScope || window;
     function maybeAdd(str) {
       if (str.lastIndexOf(start, 0) == 0 && !arrayContains(found, str)) found.push(str);
@@ -117,6 +128,7 @@
       if (typeof obj == "string") forEach(stringProps, maybeAdd);
       else if (obj instanceof Array) forEach(arrayProps, maybeAdd);
       else if (obj instanceof Function) forEach(funcProps, maybeAdd);
+      forEach(ukeys,maybeAdd);//匹配我们传进来的用户输入的代码中的所有的单词
       forAllProps(obj, maybeAdd)
     }
 
@@ -144,15 +156,10 @@
         base = base[context.pop().string];
       if (base != null) gatherCompletions(base);
     } else {
-      // If not, just look in the global object, any local scope, and optional additional-context
+      // If not, just look in the global object and any local scope
       // (reading into JS mode internals to get at the local and global variables)
       for (var v = token.state.localVars; v; v = v.next) maybeAdd(v.name);
-      for (var c = token.state.context; c; c = c.prev)
-        for (var v = c.vars; v; v = v.next) maybeAdd(v.name)
       for (var v = token.state.globalVars; v; v = v.next) maybeAdd(v.name);
-      if (options && options.additionalContext != null)
-        for (var key in options.additionalContext)
-          maybeAdd(key);
       if (!options || options.useGlobalScope !== false)
         gatherCompletions(global);
       forEach(keywords, maybeAdd);
diff --git a/node_modules/codemirror/addon/lint/json-lint.js b/node_modules/codemirror/addon/lint/json-lint.js
index 4a4fe39..3f44b86 100644
--- a/node_modules/codemirror/addon/lint/json-lint.js
+++ b/node_modules/codemirror/addon/lint/json-lint.js
@@ -32,7 +32,8 @@ CodeMirror.registerHelper("lint", "json", function(text) {
                 to: CodeMirror.Pos(loc.last_line - 1, loc.last_column),
                 message: str});
   };
-  try { jsonlint.parse(text); }
+  try {
+    jsonlint.parse(text); }
   catch(e) {}
   return found;
 });
