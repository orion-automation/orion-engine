diff --git a/node_modules/bpmn-js/lib/draw/BpmnRenderer.js b/node_modules/bpmn-js/lib/draw/BpmnRenderer.js
index a344b15..39e642d 100644
--- a/node_modules/bpmn-js/lib/draw/BpmnRenderer.js
+++ b/node_modules/bpmn-js/lib/draw/BpmnRenderer.js
@@ -487,51 +487,23 @@ export default function BpmnRenderer(
       return messagePath;
     },
     'bpmn:TimerEventDefinition': function(parentGfx, element, attrs = {}) {
-      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 2
-      });
+      var x = 29.9;
+      var y = 17.9;
 
-      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {
-        xScaleFactor: 0.75,
-        yScaleFactor: 0.75,
-        containerWidth: element.width,
-        containerHeight: element.height,
-        position: {
-          mx: 0.5,
-          my: 0.5
+      var pathData = pathMap.getScaledPath('EVENT_TIMER_CUSTOM', {
+        abspos: {
+          x: x,
+          y: y
         }
       });
 
-      drawPath(parentGfx, pathData, {
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 2
+      /* user path */ let demo=drawPath(parentGfx, pathData, {
+        strokeWidth: 0,
+        fill: '#040000',
+        stroke: getStrokeColor(element, defaultStrokeColor)
       });
 
-      for (var i = 0; i < 12; i++) {
-        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {
-          xScaleFactor: 0.75,
-          yScaleFactor: 0.75,
-          containerWidth: element.width,
-          containerHeight: element.height,
-          position: {
-            mx: 0.5,
-            my: 0.5
-          }
-        });
-
-        var width = element.width / 2,
-            height = element.height / 2;
-
-        drawPath(parentGfx, linePathData, {
-          strokeWidth: 1,
-          stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-          transform: 'rotate(' + (i * 30) + ',' + height + ',' + width + ')'
-        });
-      }
-
-      return circle;
+      return demo;
     },
     'bpmn:EscalationEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {
       var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {
@@ -596,25 +568,17 @@ export default function BpmnRenderer(
       });
     },
     'bpmn:ErrorEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {
-      var pathData = pathMap.getScaledPath('EVENT_ERROR', {
-        xScaleFactor: 1.1,
-        yScaleFactor: 1.1,
-        containerWidth: event.width,
-        containerHeight: event.height,
-        position: {
-          mx: 0.2,
-          my: 0.722
+      var pathData = pathMap.getScaledPath(!isThrowing?'EVENT_ERROR_CUSTOM':'EVENT_ERROR_CUSTOM_FILL', {
+        abspos: {
+          x: !isThrowing?21.7:23.8,
+          y: !isThrowing?6.1:7.9
         }
       });
 
-      var fill = isThrowing
-        ? getStrokeColor(event, defaultStrokeColor, attrs.stroke)
-        : getFillColor(event, defaultFillColor, attrs.fill);
-
       return drawPath(parentGfx, pathData, {
-        fill,
-        stroke: getStrokeColor(event, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 1
+        strokeWidth: 0,
+        fill: '#040000',
+        stroke: getStrokeColor(event, defaultStrokeColor)
       });
     },
     'bpmn:CancelEventDefinition': function(parentGfx, event, attrs = {}, isThrowing) {
@@ -1303,34 +1267,18 @@ export default function BpmnRenderer(
 
       var task = renderTask(parentGfx, element, attrs);
 
-      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {
-        abspos: {
-          x: 8,
-          y: 8
-        }
-      });
-
-      var businessPath = drawPath(parentGfx, headerData);
-
-      svgAttr(businessPath, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 1
-      });
-
-      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {
+      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_CUSTOM', {
         abspos: {
-          x: 8,
-          y: 8
+          x: 14.2,
+          y: 11.7
         }
       });
 
       var businessHeaderPath = drawPath(parentGfx, headerPathData);
-
       svgAttr(businessHeaderPath, {
-        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 1
+        strokeWidth: 0,
+        fill: '#040000',
+        stroke: getStrokeColor(element, defaultStrokeColor)
       });
 
       return task;
@@ -1668,24 +1616,19 @@ export default function BpmnRenderer(
       });
     },
     'bpmn:ManualTask': function(parentGfx, element, attrs = {}) {
-      attrs = pickAttrs(attrs, [
-        'fill',
-        'stroke'
-      ]);
+      var task = renderer('bpmn:Task')(parentGfx, element);
 
-      var task = renderTask(parentGfx, element, attrs);
-
-      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {
+      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL_CUSTOM', {
         abspos: {
-          x: 17,
-          y: 15
+          x: 21.2,
+          y: 18
         }
       });
 
-      drawPath(parentGfx, pathData, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 0.5
+      /* manual path */ drawPath(parentGfx, pathData, {
+        strokeWidth: 0, // 0.25,
+        fill: '#040000',
+        stroke: getStrokeColor(element, defaultStrokeColor)
       });
 
       return task;
@@ -1855,23 +1798,25 @@ export default function BpmnRenderer(
             y: 9.52
           }
         });
+        /* receive path */
+        drawPath(parentGfx, pathData, {
+          strokeWidth: 1,
+          fill: getFillColor(element, defaultFillColor),
+          stroke: getStrokeColor(element, defaultStrokeColor)
+        });
       } else {
-        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {
-          xScaleFactor: 0.9,
-          yScaleFactor: 0.9,
-          containerWidth: 21,
-          containerHeight: 14,
-          position: {
-            mx: 0.3,
-            my: 0.4
+        pathData = pathMap.getScaledPath('TASK_TYPE_SEND_CUSTOM', {
+          abspos: {
+            x: 10.2,
+            y: 7.2
           }
         });
       }
 
-      drawPath(parentGfx, pathData, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 1
+      /* receive path */ drawPath(parentGfx, pathData, {
+        strokeWidth: 0,
+        fill: '#040000',
+        stroke: getStrokeColor(element, defaultStrokeColor)
       });
 
       return task;
@@ -1884,44 +1829,35 @@ export default function BpmnRenderer(
 
       var task = renderTask(parentGfx, element, attrs);
 
-      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {
+      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT_CUSTOM', {
         abspos: {
-          x: 15,
-          y: 20
+          x: 18.5,
+          y: 9.7
         }
       });
 
-      drawPath(parentGfx, pathData, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 1
+      /* script path */ drawPath(parentGfx, pathData, {
+        strokeWidth: 0,
+        fill: '#040000',
+        stroke: getStrokeColor(element, defaultStrokeColor)
       });
 
       return task;
     },
     'bpmn:SendTask': function(parentGfx, element, attrs = {}) {
-      attrs = pickAttrs(attrs, [
-        'fill',
-        'stroke'
-      ]);
-
-      var task = renderTask(parentGfx, element, attrs);
+      var task = renderer('bpmn:Task')(parentGfx, element);
 
-      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {
-        xScaleFactor: 1,
-        yScaleFactor: 1,
-        containerWidth: 21,
-        containerHeight: 14,
-        position: {
-          mx: 0.285,
-          my: 0.357
+      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND_CUSTOM_FILL', {
+        abspos: {
+          x: 9.6,
+          y: 5.5
         }
       });
 
-      drawPath(parentGfx, pathData, {
-        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        stroke: getFillColor(element, defaultFillColor, attrs.fill),
-        strokeWidth: 1
+      /* send path */ drawPath(parentGfx, pathData, {
+        strokeWidth: 0,
+        fill: '#040000',
+        stroke: getFillColor(element, defaultFillColor)
       });
 
       return task;
@@ -1966,49 +1902,19 @@ export default function BpmnRenderer(
       return connection;
     },
     'bpmn:ServiceTask': function(parentGfx, element, attrs = {}) {
-      attrs = pickAttrs(attrs, [
-        'fill',
-        'stroke'
-      ]);
-
-      var task = renderTask(parentGfx, element, attrs);
-
-      drawCircle(parentGfx, 10, 10, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: 'none',
-        transform: 'translate(6, 6)'
-      });
-
-      var pathDataService1 = pathMap.getScaledPath('TASK_TYPE_SERVICE', {
-        abspos: {
-          x: 12,
-          y: 18
-        }
-      });
-
-      drawPath(parentGfx, pathDataService1, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 1
-      });
-
-      drawCircle(parentGfx, 10, 10, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: 'none',
-        transform: 'translate(11, 10)'
-      });
+      var task = renderer('bpmn:Task')(parentGfx, element);
 
-      var pathDataService2 = pathMap.getScaledPath('TASK_TYPE_SERVICE', {
+      var pathData = pathMap.getScaledPath('TASK_TYPE_SERVICE_CUSTOM', {
         abspos: {
-          x: 17,
-          y: 22
+          x: 10.8,
+          y: 13
         }
       });
 
-      drawPath(parentGfx, pathDataService2, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 1
+      /* service */ drawPath(parentGfx, pathData, {
+        strokeWidth: 0,
+        fill: '#040000',
+        stroke: getStrokeColor(element, defaultStrokeColor)
       });
 
       return task;
@@ -2153,53 +2059,22 @@ export default function BpmnRenderer(
       return outer;
     },
     'bpmn:UserTask': function(parentGfx, element, attrs = {}) {
-      attrs = pickAttrs(attrs, [
-        'fill',
-        'stroke'
-      ]);
-
-      var task = renderTask(parentGfx, element, attrs);
-
-      var x = 15;
-      var y = 12;
-
-      var pathDataUser1 = pathMap.getScaledPath('TASK_TYPE_USER_1', {
-        abspos: {
-          x: x,
-          y: y
-        }
-      });
-
-      drawPath(parentGfx, pathDataUser1, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 0.5
-      });
-
-      var pathDataUser2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {
-        abspos: {
-          x: x,
-          y: y
-        }
-      });
+      var task = renderer('bpmn:Task')(parentGfx, element);
 
-      drawPath(parentGfx, pathDataUser2, {
-        fill: getFillColor(element, defaultFillColor, attrs.fill),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 0.5
-      });
+      var x = 13.8;
+      var y = 14;
 
-      var pathDataUser3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {
+      var pathData = pathMap.getScaledPath('TASK_TYPE_USER_CUSTOM', {
         abspos: {
           x: x,
           y: y
         }
       });
 
-      drawPath(parentGfx, pathDataUser3, {
-        fill: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        stroke: getStrokeColor(element, defaultStrokeColor, attrs.stroke),
-        strokeWidth: 0.5
+      /* user path */ drawPath(parentGfx, pathData, {
+        strokeWidth: 0,
+        fill: '#040000',
+        stroke: getStrokeColor(element, defaultStrokeColor)
       });
 
       return task;
diff --git a/node_modules/bpmn-js/lib/draw/PathMap.js b/node_modules/bpmn-js/lib/draw/PathMap.js
index 0ceb72a..0f302b9 100644
--- a/node_modules/bpmn-js/lib/draw/PathMap.js
+++ b/node_modules/bpmn-js/lib/draw/PathMap.js
@@ -35,6 +35,75 @@ export default function PathMap() {
    * </p>
    */
   this.pathMap = {
+    'TASK_TYPE_BUSINESS_RULE_CUSTOM': {
+      d: 'm {mx},{my}c0-0.3,0.3-0.6,0.6-0.6h5.3c0.3,0,0.6,0.3,0.6,0.6v1c0,0.3-0.3,0.6-0.6,0.6h-5.4' +
+          'c-0.3,0-0.6-0.3-0.6-0.6v-1H14.2z M20.1,14.5c0.3,0,0.6,0.3,0.6,0.6v1c0,0.3-0.3,0.6-0.6,0.6h-3.2c-0.3,0-0.6-0.3-0.6-0.6v-1' +
+          'c0-0.3,0.3-0.6,0.6-0.6C16.9,14.5,20.1,14.5,20.1,14.5z M6.7,7c0-1.3,0.9-2.2,2.1-2.2h12.9c1.2,0,2.2,0.9,2.2,2.2v10.7' +
+          'c0,1.2-0.9,2.2-2.2,2.2H8.8c-1.2-0.1-2.1-1-2.1-2.3V7z M8.3,9.1v8.5c0,0.3,0.3,0.6,0.6,0.6h12.8c0.3,0,0.6-0.3,0.6-0.6V9.1H11v2.2' +
+          'c0,0.3,0.3,0.6,0.6,0.6h1c0.3,0,0.6,0.3,0.6,0.6s-0.3,0.6-0.6,0.6h-1c-0.2,0-0.4,0-0.6-0.1v1.7c0,0.3,0.3,0.6,0.6,0.6h3.1' +
+          'c0.3,0,0.6,0.3,0.6,0.6c0,0.3-0.3,0.6-0.6,0.6h-3.2c-0.8,0-1.6-0.7-1.6-1.6V9.6H8.3V9.1z'
+    },
+    'TASK_TYPE_SERVICE_CUSTOM': {
+      d: 'm {mx},{my} c0-1.7,1.3-3,3-3c1.7,0,3,1.3,3,3c0,1.7-1.3,3-3,3C12.1,16,10.8,14.7,10.8,13z M13.8,11.5c-0.8,0-1.5,0.7-1.5,1.5' +
+          's0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5S14.6,11.5,13.8,11.5z M14.9,5c0.7,0,1.3,0.5,1.5,1.1l0.2,1c0.3,0.1,0.5,0.3,0.8,0.4l1-0.3' +
+          'C19,7.1,19.8,7.4,20.1,8l1.2,2c0.3,0.6,0.2,1.4-0.3,1.8l-0.8,0.7c0,0.2,0,0.3,0,0.5s0,0.3,0,0.4l0.8,0.7c0.5,0.5,0.6,1.2,0.3,1.8' +
+          'l-1.2,2c-0.3,0.6-1.1,0.9-1.7,0.7l-1-0.3c-0.2,0.2-0.5,0.3-0.8,0.4l-0.2,1c-0.2,0.7-0.8,1.1-1.5,1.1h-2.3c-0.7,0-1.3-0.5-1.5-1.1' +
+          'l-0.2-1c-0.3-0.1-0.5-0.3-0.8-0.4l-1,0.3c-0.6,0.2-1.3-0.1-1.7-0.7l-1.2-2c-0.3-0.6-0.2-1.4,0.3-1.8l0.8-0.7c0-0.1,0-0.3,0-0.5' +
+          'c0-0.1,0-0.3,0-0.4l-0.8-0.7C6,11.4,5.9,10.6,6.2,10l1.2-2c0.3-0.6,1.1-0.9,1.7-0.7l1,0.3c0.2-0.2,0.5-0.3,0.8-0.4l0.2-1' +
+          'C11.3,5.5,11.9,5,12.6,5L14.9,5z M12.2,8.2l-0.3,0.1c-0.4,0.2-0.8,0.4-1.1,0.6l-0.3,0.2L8.7,8.7l-1.2,2L8.8,12l0,0.4' +
+          'c0,0.2,0,0.4,0,0.6s0,0.4,0,0.6l0,0.4l-1.3,1.2l1.2,2l1.7-0.5l0.3,0.2c0.3,0.3,0.7,0.5,1.1,0.6l0.3,0.1l0.4,1.7h2.3l0.4-1.7l0.4-0.1' +
+          'c0.4-0.2,0.8-0.4,1.1-0.6l0.3-0.2l1.7,0.5l1.2-2L18.7,14l0-0.4c0-0.2,0-0.4,0-0.6s0-0.4,0-0.6l0-0.4l1.3-1.2l-1.2-2l-1.7,0.5L16.8,9' +
+          'c-0.3-0.3-0.7-0.5-1.1-0.6l-0.4-0.1l-0.4-1.7h-2.3L12.2,8.2z'
+    },
+    'TASK_TYPE_MANUAL_CUSTOM': {
+      d: 'm {mx},{my} c0-0.1,0-0.3,0-0.4c1-0.3,1.6-1.2,1.6-2.3c0-0.2,0-0.4-0.1-0.6c0.7-0.4,1.1-1.2,1.1-2' +
+          'c0-0.9-0.5-1.6-1.1-2c0.1-0.2,0.1-0.4,0.1-0.6c0-1.3-1.1-2.4-2.4-2.4h-4.1c0-0.2,0.1-0.4,0.1-0.5l0,0c0-1.5-1.2-2.7-2.7-2.7' +
+          'c-0.7,0-1.3,0.3-1.8,0.7L8.9,7.7C7.5,9,6.7,10.9,6.7,12.8v1.1c0,3.5,2.9,6.4,6.4,6.4h5.6C20.1,20.4,21.2,19.3,21.2,18z M13.2,18.8' +
+          'c-2.6,0-4.8-2.2-4.8-4.8v-1.1c0-1.5,0.6-2.9,1.7-3.9L13,6.2c0.2-0.2,0.5-0.3,0.8-0.3c0.7,0,1,0.6,1,1c0,0.3-0.1,0.6-0.3,0.8l-1,0.9' +
+          'c0,0.1-0.1,0.1-0.1,0.2s0.1,0.3,0.3,0.3h6.7c0.4,0,0.8,0.4,0.8,0.8c0,0.4-0.4,0.8-0.8,0.8h-5.1c-0.3,0.1-0.5,0.3-0.5,0.6' +
+          'c0,0.3,0.2,0.5,0.5,0.5h6.2c0.4,0,0.8,0.4,0.8,0.8c0,0.4-0.4,0.8-0.8,0.8h-6.1c-0.3,0.1-0.5,0.3-0.5,0.6c0,0.3,0.2,0.5,0.5,0.5h5.1' +
+          'c0.4,0,0.8,0.4,0.8,0.8s-0.4,0.8-0.8,0.8h-5.1c-0.3,0.1-0.5,0.3-0.5,0.6s0.2,0.5,0.5,0.5h3.4c0.4,0,0.8,0.4,0.8,0.8' +
+          's-0.4,0.8-0.8,0.8L13.2,18.8L13.2,18.8z'
+    },
+    'TASK_TYPE_USER_CUSTOM': {
+      d: 'm {mx},{my} c2.5,0,4.5-2,4.5-4.5S16.3,5,13.8,5c-2.5,0-4.5,2-4.5,4.5S11.3,14,13.8,14z M13.8,6.5c1.7,0,3,1.3,3,3' +
+          'c0,1.7-1.3,3-3,3c-1.7,0-3-1.3-3-3C10.8,7.8,12.1,6.5,13.8,6.5z M16.7,15h-6c-2.8,0-5,2.2-5,5c0,0.6,0.4,1,1,1h14c0.6,0,1-0.4,1-1' +
+          'C21.8,17.2,19.5,15,16.7,15z M7.3,19.5c0.2-1.7,1.7-3,3.5-3h6c1.8,0,3.2,1.3,3.5,3H7.3z'
+    },
+    'TASK_TYPE_SCRIPT_CUSTOM': {
+      d: 'm {mx},{my}l2.1,2.1c0.3,0.3,0.3,0.8,0,1.1L18.5,15c-0.3,0.3-0.8,0.3-1.1,0c-0.3-0.3-0.3-0.8,0-1.1l1.6-1.6' +
+          'l-1.6-1.5c-0.3-0.3-0.3-0.8,0-1.1C17.7,9.4,18.2,9.4,18.5,9.7L18.5,9.7z M13.7,12.4l1.5,1.6c0.3,0.3,0.3,0.8,0,1.1' +
+          'c-0.3,0.3-0.8,0.3-1.1,0L12,13c-0.3-0.3-0.3-0.8,0-1.1l2.1-2.1c0.3-0.3,0.8-0.3,1.1,0s0.3,0.8,0,1.1L13.7,12.4z M22.8,4.9' +
+          'c1.2,0,2.1,1,2.1,2.1v10.8c0,1.2-1,2.1-2.1,2.1H9.9c-1.2,0-2.1-1-2.1-2.1V7.1c0-1.2,1-2.1,2.1-2.1h12.9V4.9z M22.8,6.5H9.9' +
+          'c-0.3,0-0.5,0.3-0.5,0.6v10.7c0,0.3,0.2,0.5,0.5,0.5h12.9c0.3,0,0.5-0.2,0.5-0.5V7.1C23.3,6.8,23.1,6.5,22.8,6.5z',
+    },
+    'TASK_TYPE_SEND_CUSTOM': {
+      d: 'm {mx},{my}c-0.3,0-0.6,0.3-0.6,0.6v0.8l6.3,5.2c0.8,0.6,1.8,0.6,2.6,0l6.3-5.2V7.8c0-0.3-0.3-0.6-0.6-0.6H10.2z' +
+          ' M9.6,10.8v6.3c0,0.3,0.3,0.6,0.6,0.6h14c0.3,0,0.6-0.3,0.6-0.6v-6.3l-5.2,4.3c-1.4,1.1-3.4,1.1-4.8,0L9.6,10.8z M7.8,7.8' +
+          'c0-1.3,1-2.3,2.3-2.3h14c1.3,0,2.3,1,2.3,2.3v9.3c0,1.3-1,2.3-2.3,2.3h-14c-1.3,0-2.3-1-2.3-2.3C7.8,17.1,7.8,7.8,7.8,7.8z',
+    },
+    'TASK_TYPE_SEND_CUSTOM_FILL': {
+      d: 'm {mx},{my}c-1,0-1.8,0.8-1.8,1.8c0,0.6,0.3,1.1,0.7,1.4l7.9,5.9c0.4,0.3,1,0.3,1.4,0l7.9-5.9' +
+          'c0.4-0.3,0.7-0.8,0.7-1.4c0-1-0.8-1.8-1.8-1.8C24.8,5.5,9.6,5.5,9.6,5.5z M7.9,9.6v7.6c0,1.3,1,2.3,2.3,2.3h14c1.3,0,2.3-1,2.3-2.3' +
+          'V9.6l-7.9,6c-0.8,0.6-2,0.6-2.8,0L7.9,9.6z',
+    },
+    'EVENT_TIMER_CUSTOM': {
+      d: 'M {mx},{my}c0,6.6-5.4,12-12,12s-12-5.4-12-12c0-2.5,0.8-4.8,2.1-6.7c0.3-0.5,1-0.6,1.6-0.3' +
+          'c0.5,0.3,0.6,1.1,0.3,1.6c-1.1,1.6-1.7,3.4-1.7,5.5c0,5.4,4.4,9.8,9.8,9.8c5.4,0,9.8-4.4,9.8-9.8c0-5-3.8-9.1-8.6-9.7v2.6' +
+          'c0,0.6-0.5,1.1-1.2,1.1c-0.6,0-1.1-0.5-1.1-1.1V7c0-0.6,0.5-1.1,1.1-1.1C24.5,5.8,29.9,11.2,29.9,17.9L29.9,17.9z M18.7,17.1' +
+          'c0.5,0.4,0.5,1.2,0,1.6c-0.4,0.5-1.1,0.5-1.6,0l-3.8-3.8c-0.4-0.4-0.4-1.1,0-1.6c0.4-0.4,1.2-0.4,1.6,0L18.7,17.1z',
+    },
+    'EVENT_ERROR_CUSTOM': {
+      d: 'm {mx},{my}M21.7,6.1c0.2-0.2,0.5-0.3,0.8-0.3c0.8,0,1.4,0.8,1.1,1.6l-3.2,8.9h5.1c0.7,0,1.3,0.6,1.3,1.3' +
+          'c0,0.4-0.2,0.7-0.4,1l-12.5,11c-0.2,0.2-0.5,0.3-0.8,0.3c-0.8,0-1.4-0.8-1.1-1.6l3.2-8.9H10c-0.7,0-1.2-0.5-1.2-1.2' +
+          'c0-0.3,0.1-0.7,0.4-0.9L21.7,6.1z M21.7,8.1l-10.9,9.7h5.5c0.2,0,0.5,0.1,0.6,0.3c0.1,0.2,0.2,0.5,0.1,0.7l-3.1,8.7l11-9.7h-5.6' +
+          'c-0.2,0-0.5-0.1-0.6-0.3c-0.1-0.2-0.2-0.5-0.1-0.7L21.7,8.1z'
+    },
+    'EVENT_ERROR_CUSTOM_FILL': {
+      d: 'm {mx},{my}c0.3-0.6,0.1-1.4-0.5-1.8c-0.6-0.4-1.3-0.4-1.9,0.1l-12,10.5C9,17.1,8.8,17.7,9,18.3' +
+          'c0.2,0.6,0.8,1,1.4,1h5.2L12,27.7c-0.3,0.6-0.1,1.4,0.5,1.8c0.6,0.4,1.3,0.4,1.9-0.1l12-10.5c0.5-0.4,0.6-1.1,0.4-1.7' +
+          'c-0.2-0.6-0.8-1-1.4-1h-5.2L23.8,7.9z'
+    },
     'EVENT_MESSAGE': {
       d: 'm {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}',
       height: 36,
